server:
  port: 8010

testServer:
  app:
    ip: 192.168.158.107
  database:
    ip: 192.168.158.108


spring:

  boot:
    admin:
      client:
        url:
          - http://${testServer.app.ip}:7700
        username: root
        password: corelife3134

  application:
    name: CLIENT-SERVICE

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${testServer.database.ip}:5432/client-service
    username: postgres
    password: 123
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

eureka:
  instance:
    preferIpAddress: true
    hostname: ${testServer.app.ip}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka

security:
  oauth2:
    resource:
      link: http://${testServer.app.ip}:8080/api/auth-service
      token-info-uri: ${security.oauth2.resource.link}/oauth/check_token
    client:
      client-id: anor
      client-secret: anorbank2021


refresh:
  scope:
    version: 0.0.2

feign:
  client:
    config:
      default:
        connectTimeout: 120000
        readTimeout: 120000


app:
  client:
    id: anor
    secret: anorbank2021
  build:
    name: client-service-ms

host:
  full:
    dns:
      auth:
        link: http://${testServer.app.ip}:8080/api/auth-service

auth:
  server:
    schem: http